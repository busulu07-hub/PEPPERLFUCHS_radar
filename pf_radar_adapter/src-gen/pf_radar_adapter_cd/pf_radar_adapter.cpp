// --------------------------------------------------------
// Copyright (c)
//
// contributions by author
//                  author@somewhere.net
// maintained by    maintainer
//                  maintainer@somewhere.net

// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define pf_radar_adapter_cd_pf_radar_adapter_BODY

/************************************************************
 pf_radar_adapter class body
 ************************************************************/

// include associated header file
#include "pf_radar_adapter_cd/pf_radar_adapter.h"

// Derived includes directives
#include "pf_radar_adapter_cd/pf_radar_adapter_impl.h"
#include "pf_radar_adapter_cd/pf_radar_adapter_main.h"
#include "rclcpp/rclcpp.hpp"

namespace pf_radar_adapter_cd {

// static attributes (if any)

/**
 * 
 * @param options 
 */
pf_radar_adapter::pf_radar_adapter(rclcpp::NodeOptions /*in*/options) :
    rclcpp_lifecycle::LifecycleNode("pf_radar_adapter", options) {
  cbg_publisher_ = create_callback_group(
      rclcpp::CallbackGroupType::MutuallyExclusive);

  cbg_reader_ = create_callback_group(
      rclcpp::CallbackGroupType::MutuallyExclusive);

  rclcpp::PublisherOptions radar_options;
  radar_options.callback_group = cbg_publisher_;
  radar_pub_ = create_publisher < pf_radar_interfaces_sd::msg::Radar
      > ("radar", 1, radar_options);
  // directly activate a publisher
  radar_pub_->on_activate();

  rclcpp::SubscriptionOptions _pepperl_proxy_device_1_rpdo_options;
  _pepperl_proxy_device_1_rpdo_options.callback_group = cbg_reader_;
  _pepperl_proxy_device_1_rpdo_sub_ =
      create_subscription < canopen_interfaces::msg::COData
          > ("/pepperl/proxy_device_1/rpdo", rclcpp::QoS(rclcpp::KeepLast(100)).best_effort(), std::bind(
              &pf_radar_adapter_cd::pf_radar_adapter_impl::co_data_handler,
              (pf_radar_adapter_impl*) this, std::placeholders::_1), _pepperl_proxy_device_1_rpdo_options);

}

} // of namespace pf_radar_adapter_cd

/************************************************************
 End of pf_radar_adapter class body
 ************************************************************/
